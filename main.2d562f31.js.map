{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","tr","appendRow","removeRow","appendColumn","removeColumn","maxCount","minCount","addEventListener","e","countRows","rows","length","disabled","item","lastElementChild","cloneNode","append","removeChild","lastChild","tableColumns","children","map","el","forEach"],"mappings":";AAAA,aAwEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApEA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAKH,SAASC,cAAc,MAE5BG,EAAYJ,SAASC,cAAc,eACnCI,EAAYL,SAASC,cAAc,gBACnCK,EAAeN,SAASC,cAAc,kBACtCM,EAAeP,SAASC,cAAc,kBAEtCO,EAAW,GACXC,EAAW,EAEjBL,EAAUM,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAAYb,EAAMc,KAAKC,OAEzBF,GAAAA,GAAaJ,EACfJ,EAAUW,SAAW,WADnBH,CAMAA,IAAcH,IAChBJ,EAAUU,UAAYV,EAAUU,UAG5BC,IAAAA,EAAOd,EAAMe,iBAAiBC,WAAU,GAE9ChB,EAAMiB,OAAOH,MAGfX,EAAUK,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAAYb,EAAMc,KAAKC,OAEzBF,GAAaH,EACfJ,EAAUU,SAAW,QAKnBH,IAAcJ,IAChBJ,EAAUW,UAAYX,EAAUW,UAGlCb,EAAMkB,YAAYlB,EAAMmB,cAG1Bf,EAAaI,iBAAiB,QAAS,SAACC,GAChCW,IAAAA,EAAenB,EAAGoB,SAAST,OAE7BQ,GAAgBd,EAClBF,EAAaS,SAAW,QAKtBO,IAAiBb,IACnBF,EAAaQ,UAAYR,EAAaQ,UAGpBb,EAAAA,EAAMqB,UAElBC,IAAI,SAAAR,GACJS,IAAAA,EAAKT,EAAKC,iBAAiBC,WAAU,GAE3CF,EAAKG,OAAOM,QAIhBlB,EAAaG,iBAAiB,QAAS,SAACC,GAChCW,IAAAA,EAAenB,EAAGoB,SAAST,OAE7BQ,GAAgBb,EAClBF,EAAaQ,SAAW,QAKtBO,IAAiBd,IACnBF,EAAaS,UAAYT,EAAaS,UAGpBb,EAAAA,EAAMqB,UAElBG,QAAQ,SAAAV,GACdA,EAAKI,YAAYJ,EAAKC","file":"main.2d562f31.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst table = document.querySelector('.field');\nconst tbody = document.querySelector('tbody');\nconst tr = document.querySelector('tr');\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row ');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst maxCount = 10;\nconst minCount = 2;\n\nappendRow.addEventListener('click', (e) => {\n  const countRows = table.rows.length;\n\n  if (countRows >= maxCount) {\n    appendRow.disabled = 'true';\n\n    return;\n  };\n\n  if (countRows === minCount) {\n    removeRow.disabled = !removeRow.disabled;\n  }\n\n  const item = tbody.lastElementChild.cloneNode(true);\n\n  tbody.append(item);\n});\n\nremoveRow.addEventListener('click', e => {\n  const countRows = table.rows.length;\n\n  if (countRows <= minCount) {\n    removeRow.disabled = 'true';\n\n    return;\n  }\n\n  if (countRows === maxCount) {\n    appendRow.disabled = !appendRow.disabled;\n  }\n\n  tbody.removeChild(tbody.lastChild);\n});\n\nappendColumn.addEventListener('click', (e) => {\n  const tableColumns = tr.children.length;\n\n  if (tableColumns >= maxCount) {\n    appendColumn.disabled = 'true';\n\n    return;\n  }\n\n  if (tableColumns === minCount) {\n    removeColumn.disabled = !removeColumn.disabled;\n  }\n\n  const allRows = [...tbody.children];\n\n  allRows.map(item => {\n    const el = item.lastElementChild.cloneNode(true);\n\n    item.append(el);\n  });\n});\n\nremoveColumn.addEventListener('click', (e) => {\n  const tableColumns = tr.children.length;\n\n  if (tableColumns <= minCount) {\n    removeColumn.disabled = 'true';\n\n    return;\n  }\n\n  if (tableColumns === maxCount) {\n    appendColumn.disabled = !appendColumn.disabled;\n  }\n\n  const allRows = [...tbody.children];\n\n  allRows.forEach(item => {\n    item.removeChild(item.lastElementChild);\n  });\n});\n"]}